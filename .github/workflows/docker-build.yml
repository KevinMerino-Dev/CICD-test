name: CI/CD Pipeline v2
on:
  push:
    branches:
      - main

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Import Docker Image
      - name: Import Docker Image
        id: import-image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/base-image:latest
          IMAGE_ID=$(docker images -q ${{ secrets.DOCKER_USERNAME }}/base-image:latest)
          echo "IMPORTED_IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          python analyze_image.py --image ${{ secrets.DOCKER_USERNAME }}/base-image:latest --stage import

      # 4. Build Docker Image
      - name: Build Docker Image
        id: build-image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build -t cicd-test:latest .
          IMAGE_ID=$(docker images -q cicd-test:latest)
          echo "BUILT_IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          python analyze_image.py --image cicd-test:latest --stage build

      # 5. Test Docker Image
      - name: Test Docker Image
        run: |
          docker run --rm cicd-test:latest python test_main.py

      # 6. Push Docker Image
      - name: Push Docker Image
        run: |
          docker tag cicd-test:latest ${{ secrets.DOCKER_USERNAME }}/cicd-test:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/cicd-test:latest
          python analyze_image.py --image ${{ secrets.DOCKER_USERNAME }}/cicd-test:latest --stage push

      # 7. Cleanup
      - name: Cleanup Docker Resources
        run: |
          docker image rm ${{ secrets.DOCKER_USERNAME }}/base-image:latest cicd-test:latest || true
